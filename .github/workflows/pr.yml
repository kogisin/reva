name: "PR"

on:
  push:
    branches:
      - "main"
  pull_request:
  workflow_dispatch:

concurrency:
  group: "${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}"
  cancel-in-progress: true

jobs:
  # lock-files:
  #   name: "Check lock files"
  #   runs-on: ["runs-on", "runner=8cpu-linux-x64", "run-id=${{ github.run_id }}"]
  #   env:
  #     CARGO_NET_GIT_FETCH_WITH_CLI: "true"
  #   steps:
  #     - name: "Checkout sources"
  #       uses: "actions/checkout@v4"

  #     - name: "Update lock files"
  #       run: |
  #         cargo tree
  #         (cd ./bin/client-eth && cargo tree)
  #         (cd ./bin/client-op && cargo tree)
  #         (cd ./bin/client-linea && cargo tree)

  #     - name: "Assert no changes"
  #       run: |
  #         if [ -n "$(git status --porcelain)" ]; then 
  #           echo "Lock files not up to date"
  #           exit 1
  #         fi

  # deps-semver:
  #   name: "Check upstream SemVer violations"
  #   runs-on: ["runs-on", "runner=8cpu-linux-x64", "run-id=${{ github.run_id }}"]
  #   steps:
  #     - name: "Checkout sources"
  #       uses: "actions/checkout@v4"

  #     - name: "Install sp1up"
  #       run: |
  #         curl -L https://sp1.succinct.xyz | bash
  #         echo "$HOME/.sp1/bin" >> $GITHUB_PATH

  #     - name: "Install SP1 toolchain"
  #       run: |
  #         sp1up

  #     - name: "Remove lock files"
  #       run: |
  #         find -name Cargo.lock -type f -exec rm {} \;

  #     - name: "Build without lock files"
  #       run: |
  #         cargo build --all --all-targets

  fmt:
    name: "Run cargo fmt"
    runs-on: warp-ubuntu-latest-x64-4x
    steps:
      - name: "Checkout sources"
        uses: "actions/checkout@v4"

      - name: "Setup nightly toolchain"
        uses: "actions-rs/toolchain@v1"
        with:
          toolchain: "nightly"
          profile: "minimal"
          components: "rustfmt"
          override: true

      - name: "Check Rust format"
        run: |
          cargo fmt --all -- --check

  Build:
    name: "Build Reva"
    runs-on: warp-custom-big-disk
    steps:
      - name: "Checkout sources"
        uses: "actions/checkout@v4"

      - name:  "remove default rust"
        run: |     
          rustup self uninstall -y

      - name: Install Rust nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: clippy

      - name: "Make Dirs"
        run: |
          mkdir -p /home/runner/.local/bin
          sudo mkdir -p /valida-toolchain/
          sudo chown $(whoami):users /valida-toolchain 

      - name: Get cached Valida
        uses: WarpBuilds/cache@v1.4.1
        with:
          enableCrossArchArchive: true
          key: valida-latest
          path: /valida-toolchain/

      - name: "Install Valida"
        run: |
          rustup toolchain link valida /valida-toolchain

      - name: "Build Reva"
        run: |
          cd bin/host
          cargo +valida build --target=x86_64-unknown-linux-gnu --release

      - name: "Build eth-client"
        run: |
          cd bin/client-eth
          cargo +valida build --release

      - name: "Run Tests"
        run: |
          cargo clippy --all --all-targets -- -D warnings

      - name: "Run Reva Tests"
        run: |
          ./scripts/test-client.sh